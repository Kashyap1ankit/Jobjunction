generator client {
  provider = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  username      String   @unique
  bio           String?
  password      String?
  avatar        String?
  email         String   @unique
  instagram_url String?
  linkedin_url  String?
  twitter_url   String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  provider      Provider @default(google)
  provider_id   String?
  role          UserRole @default(USER)
  posts         Post[]
  bookmarks     Bookmark[]
  notification  Notification[]
}

model Post {
  id               String    @id @default(uuid())
  authorId         String
  apply_link       String
  company          String
  company_logo     String    @default("/Images/jj-logo.png")
  company_website  String?
  experience_level String
  job_type         String
  location         String
  position         String
  role_description String
  salary_disclosed Boolean
  salary_max       Int?
  salary_min       Int?
  approved         Boolean?   @default(false)
  author           User      @relation(fields: [authorId], references: [id],onDelete: Cascade)
  bookmarks        Bookmark[]

  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt 
  }

model Bookmark {
  id     String @id @default(uuid())
  postId String
  userId String
  post   Post   @relation(fields: [postId],references: [id],onDelete: Cascade)
  user   User   @relation(fields: [userId],references: [id],onDelete: Cascade)
}

model Notification {
  id            String  @id @default(uuid())
  userId        String
  user          User    @relation(fields: [userId],references: [id])
  subscription  String
}



enum Provider {
  google
  credentials
}

enum UserRole {
  ADMIN
  USER
}